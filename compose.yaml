services:
  vue:
    build:
      context: ./vue
      target: vue_dev
      args:
        - VITE_DOMAIN=${DOMAIN}
    image: vue:latest
    restart: on-failure
    ports:
      - ${VUE_PORT:-3000}:3000
    volumes:
      - ./vue:/app:rw,cached
      - vue_node_modules:/app/node_modules:rw,cached

  frankenphp:
    build:
      context: ./symfony
    image: ${COMPOSE_PROJECT_NAME}-frankenphp
    restart: unless-stopped
    environment:
      SERVER_NAME: ${DOMAIN:-localhost}, frankenphp:${HTTP_PORT:-80}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^${DOMAIN:-puc\.local|localhost}|frankenphp$$}
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=${POSTGRES_CHARSET:-utf8}
      VUE_PORT: ${VUE_PORT:-3000}
      DOCS_PORT: ${DOCS_PORT:-5000}
      QGIS_SERVER_PORT: ${QGIS_SERVER_PORT:-6000}
      DOMAIN: ${DOMAIN}
      CADDY_PROTOCOL: ${CADDY_PROTOCOL:-https}
      HTTP_PORT: ${HTTP_PORT:-80}
      HTTPS_PORT: ${HTTPS_PORT:-443}
    cap_add:
      - NET_ADMIN
    depends_on:
      - postgres
      - vue
      - qgis
      - docs
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
      - ${HTTPS_PORT:-443}:443/udp
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  docs:
    build:
      context: ./docs
      target: docs_dev
    image: docs:latest
    restart: on-failure
    ports:
      - ${DOCS_PORT:-5000}:5000
    volumes:
      - ./docs:/app:rw,cached
      - docs_node_modules:/app/node_modules:rw,cached

  postgres:
    image: postgis/postgis:${POSTGIS_VERSION:-16-3.5}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      PGPORT: ${POSTGRES_PORT:-5432}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data:rw
    
  # qgis:
  #   image: qgis/qgis-server:${QGIS_SERVER_VERSION:-ltr}
  #   restart: on-failure
  #   volumes:
  #     - ./docker/qgis/data:/data:ro
  #   ports:
  #     - 9993:9993
  #   environment:
  #     - LANG=en_EN.UTF-8
  #     - QGIS_PROJECT_FILE=/data/osm.qgs
  #     - QGIS_SERVER_LOG_LEVEL=0
  #     - DEBUG=1

  qgis:
    image: qgis/qgis-server:${QGIS_SERVER_VERSION:-ltr}
    environment:
      # Do not run the embedded copy of nginx
      SKIP_NGINX: "true"
      # Improve rendering performance
      QGIS_SERVER_PARALLEL_RENDERING: "true"
      QGIS_SERVER_MAX_THREADS: 4
      # Limit the maximum size returned by a GetMap
      QGIS_SERVER_WMS_MAX_HEIGHT: 5000
      QGIS_SERVER_WMS_MAX_WIDTH: 5000
    ports:
      - ${QGIS_SERVER_PORT:-6000}:9993
    volumes:
     # Data should be mount RO when working
     # with GeoPackages and more than one QGIS container
      - ./docker/qgis/data:/io/data:ro
      - ./docker/qgis/plugins:/io/plugins
      - ./docker/qgis/fonts:/usr/share/fonts
      - ./docker/qgis/svg:/var/lib/qgis/.local/share/QGIS/QGIS3/profiles/default/svg
      # - ./conf/pg_service.conf:/etc/postgresql-common/pg_service.conf:ro
    restart: on-failure

  mailserver:
    image: mailserver/docker-mailserver:${DOCKER_MAILSERVER_VERSION:-14.0.0}
    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
    hostname: mail.${DOMAIN}
    ports:
      - "${SMTP_RELAY_PORT:-25}:25"
      - "${SMTP_OLD_PORT:-465}:465"
      - "${SMTP_SUBMISSION_PORT:-587}:587"
      - "${IMAP_PORT:-993}:993"
    volumes:
      - ./docker/mailserver/dms/mail-data/:/var/mail/
      - ./docker/mailserver/dms/mail-state/:/var/mail-state/
      - ./docker/mailserver/dms/mail-logs/:/var/log/mail/
      - ./docker/mailserver/dms/config/:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ENABLE_RSPAMD=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
    cap_add:
      - NET_ADMIN # For Fail2Ban to work
    restart: always

volumes:
  caddy_data:
  caddy_config:
  vue_node_modules:
  docs_node_modules:
  database_data: